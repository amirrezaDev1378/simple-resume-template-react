{"version":3,"sources":["features/textInput/TextSlice.js","features/textInput/Text.js","components/profile/profile.style.jsx","assets/images/bg.png","assets/UserPicture.png","ResumeData/ResumeData.js","components/profile/profile.jsx","components/jobs/jobs.style.jsx","components/jobs/jobs.jsx","components/skills/skills.style.jsx","components/skills/skills.jsx","components/language/language.style.jsx","components/language/language.jsx","components/Portfolio/Portfolio.style.jsx","assets/images/1.png","assets/images/2.png","assets/images/3.png","assets/images/4.png","assets/images/5.png","assets/images/6.png","ResumeData/portfolio/images.js","components/Portfolio/Portfolio.jsx","components/layout/layout.jsx","App.js","app/store.js","serviceWorker.js","index.js"],"names":["TextSlice","createSlice","name","initialState","value","status","reducers","addText","state","changeText","action","payload","actions","Text","useStyles","makeStyles","profileGrid","display","justifyContent","alignItems","width","profile","backgroundImage","height","flexDirection","boxShadow","borderRadius","overflow","padding","marginTop","profileSVG","alignContent","profilePic","position","profilePicture","zIndex","profileText","textAlign","color","profileTextParent","profileButtons","marginRight","background","filter","ResumeAbilitiesData","ResumeAbilities","ResumeJobsData","ResumeJobs","ResumeProjectsData","ResumeProjects","ResumePicture","ResumePic","Profile","styles","profileBox","React","createRef","useState","useEffect","current","setAttribute","clientWidth","window","onresize","innerWidth","SVGwidth","Grid","className","container","spacing","item","xs","sm","md","ref","src","alt","Button","xmlns","viewBox","id","d","transform","fill","JobsContainer","paddingLeft","marginLeft","JobsGradiantBorder","borderWidth","borderStyle","borderImage","borderImageSlice","ProjectsGradiantBorder","JobTitle","fontWeight","Jobs","data","is_project","type","GradiantBorder","H2FontSize","PFontSize","H4FontSize","style","fontSize","JobDepartment","JobDuration","JobDescription","RandomGradiant","color1","Math","round","random","opacity1","Number","toFixed","color2","opacity2","gradiantText","forEach","index","SkillsContainer","percentage","backgroundColor","randomGradiant","Skills","SkillName","AbilityRate","gradiant","LanguageContainer","paddingTop","return_stars","number","star_array","i","push","Star","Language","Listening","Reading","Speaking","Writing","imageContainer","cursor","transition","ImagesMiddle","ImageHovered","img1","image1","img2","image2","img3","image3","img4","image4","img5","image5","img6","image6","ImageJsx","image","ImageHoverHandler","e","MouseEv","target","replace","onMouseEnter","event","onMouseLeave","onClick","alert","Portfolio","ReturnJobs","Data","JobsJsxArray","Object","keys","val","ReturnProjects","ReturnAbilities","SkillsJsxArray","ContainerPadding","AbilitiesMargin","PortfolioContainer","Layout","paddingBottom","App","store","configureStore","reducer","text","textReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.badad77a.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n// import { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n    value:'mame',\r\n    status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\n// export const incrementAsync = createAsyncThunk(\r\n//   'counter/fetchCount',\r\n//   async (amount) => {\r\n//     const response = await fetchCount(amount);\r\n//     // The value we return becomes the `fulfilled` action payload\r\n//     return response.data;\r\n//   }\r\n// );\r\n\r\nexport const TextSlice = createSlice({\r\n    name: 'text',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n\r\n        addText: (state) => {\r\n            state.value = 'Math'\r\n        },\r\n\r\n        // Use the PayloadAction type to declare the contents of `action.payload`\r\n        changeText: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n    // including actions generated by createAsyncThunk or in other slices.\r\n    //   extraReducers: (builder) => {\r\n    //     builder\r\n    //       .addCase(incrementAsync.pending, (state) => {\r\n    //         state.status = 'loading';\r\n    //       })\r\n    //       .addCase(incrementAsync.fulfilled, (state, action) => {\r\n    //         state.status = 'idle';\r\n    //         state.value += action.payload;\r\n    //       });\r\n    //   },\r\n});\r\n\r\nexport const { addText, changeText } = TextSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectValue = (state) => state.text.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const TestFunc = (amount) => (dispatch, getState) => {\r\n    const currentValue = selectValue(getState());\r\n    console.log(currentValue)\r\n};\r\n\r\nexport default TextSlice.reducer;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addText,\r\n    changeText,\r\n    selectValue,\r\n    TestFunc\r\n  } from './TextSlice';\r\n  import Button from '@mui/material/Button';\r\nfunction Text() {\r\n    const value = useSelector(selectValue);\r\n    const dispatch = useDispatch();\r\n    // const [addText, setAddText] = useState('mamooz');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p >{value}</p>\r\n            <Button onClick={() => dispatch(addText())}>\r\n                Add Text\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","import { makeStyles } from \"@mui/styles\";\r\nimport bgi from '../../assets/images/bg.png'\r\nconst useStyles = makeStyles({\r\n    profileGrid:{\r\n        display:\"flex\",\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        width:'100%'\r\n    },\r\n    profile: {\r\n        backgroundImage: 'linear-gradient(#FFE00D , #FEA127)',\r\n        height: '700px',\r\n        display: 'flex',\r\n        flexDirection: 'column !important',\r\n        boxShadow: '0px 0px 70px rgba(0, 0, 0, 0.3)',\r\n        borderRadius: '12px',\r\n        justifyContent:\"center\",\r\n        overflow:'hidden',\r\n        padding:'0px !important',\r\n        marginTop:'70px !important'\r\n    },\r\n    profileSVG: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'flex-end',\r\n        height: '100%',\r\n        // backgroundImage : `url(${bgi})`,\r\n        // backgroundRepeat : 'no-repeat',\r\n        // backgroundSize : 'cover'\r\n    },\r\n    profilePic: {\r\n        position: 'absolute'\r\n    },\r\n    profilePicture: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '66px',\r\n        zIndex: 3\r\n    },\r\n    profileText: {\r\n        zIndex: 99,\r\n        textAlign: 'center',\r\n        marginTop: 390,\r\n        position: 'absolute',\r\n        '&>:nth-child(1)':{\r\n            color:'white !important'\r\n        },\r\n        '&>:nth-child(3)':{\r\n            color:'white !important'\r\n        }\r\n    },\r\n    profileTextParent: {\r\n        width: '100%'\r\n    },\r\n    profileButtons: {\r\n        \"& > *\": {\r\n            marginRight: '20px !important',\r\n            textAlign: 'center',\r\n        },\r\n        \"&>:nth-child(1)\": {\r\n            color: 'white',\r\n            background: 'linear-gradient(#fd8590 0%, #fc364a 100%) !important',\r\n            filter: 'drop-shadow(0px 16px 24px rgba(252, 59, 78, 0.24)) !important',\r\n            borderRadius:198,\r\n            padding:10\r\n\r\n        },\r\n        \"&>:nth-child(2)\": {\r\n            color: 'white',\r\n            borderRadius: '25px',\r\n            background: 'linear-gradient(#b281fd 0%, #844cfa 100%) !important',\r\n            boxShadow:'0px 16px 24px rgba(134, 78, 250, 0.24) !important',\r\n\r\n            padding:10\r\n\r\n        }\r\n\r\n    }\r\n});\r\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/bg.b9038980.png\";","export default __webpack_public_path__ + \"static/media/UserPicture.c33c1250.png\";","import ResumeAbilities from './ResumeAbilitiesData.json';\r\nimport ResumeJobs from './ResumeJobsData.json';\r\nimport ResumeProjects from './ResumeProjectsData.json';\r\nimport ResumePic from '../assets/UserPicture.png';\r\nexport const ResumeAbilitiesData = ResumeAbilities;\r\nexport const ResumeJobsData = ResumeJobs;\r\nexport const ResumeProjectsData = ResumeProjects;\r\nexport const ResumePicture = ResumePic;\r\nexport const UserPersonalInfo = {\r\n    name : 'Ali',\r\n    SocialMedia : {\r\n        telegram : '@test',\r\n        whatsapp : '+190058050505',\r\n        email : 'test@test.com'\r\n    },\r\n};\r\n\r\n","import {Button, Container, Grid} from \"@mui/material\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport useStyles from \"./profile.style\";\r\nimport {ResumePicture} from \"../../ResumeData/ResumeData\";\r\nimport {BackspaceOutlined} from \"@mui/icons-material\";\r\n\r\n\r\nfunction Profile() {\r\n    const styles = useStyles();\r\n    const profileBox = React.createRef();\r\n    const profileText = React.createRef();\r\n    const profileSVG = React.createRef();\r\n    const [test, updateTest] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        profileText.current.setAttribute('style', 'width: ' + profileBox.current.clientWidth + 'px;');\r\n        window.onresize = function () {\r\n            if (profileText.current !== null) {\r\n\r\n                profileText.current.setAttribute('style', 'width: ' + profileBox.current.clientWidth + 'px;');\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }, [window.innerWidth])\r\n\r\n    const SVGwidth = window.innerWidth <500 ? \"130%\" : \"100%\";\r\n    return (\r\n\r\n        <Grid className={styles.profileGrid} container spacing={2}>\r\n\r\n            <Grid className={styles.profile} item xs={10} sm={10} md={4} ref={profileBox}>\r\n                <div className={styles.profilePicture}>\r\n\r\n                    <img className={styles.profilePic + ' img-grid'} src={ResumePicture} alt='dsd'/>\r\n                </div>\r\n\r\n                <div className={styles.profileText} ref={profileText}>\r\n\r\n\r\n                    <h3>Hi, I'm Jhon Smith</h3>\r\n                    <h1 className=\"text-red\">\r\n                        Creative Designer\r\n                    </h1>\r\n                    <p className=\"text\">Web, Mobile App UI/UX </p>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={'f-row ' + styles.profileButtons}>\r\n                        <Button>Download CV</Button>\r\n                        <Button>Hire Me !</Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={styles.profileSVG}>\r\n\r\n                    <svg ref={profileSVG} xmlns=\"http://www.w3.org/2000/svg\" width={SVGwidth} viewBox=\"0 0 570 511.125\">\r\n                        <path id=\"Path_85\" data-name=\"Path 85\"\r\n                              d=\"M0-70.147s78.986,53.585,171.761,0,81.577-62.383,155.957-115.968C466.88-261.295,570-210.109,570-210.109V284H0Z\"\r\n                              transform=\"translate(0 227.125)\" fill=\"#222b45\"\r\n                        />\r\n                    </svg>\r\n\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import {makeStyles} from \"@mui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    JobsContainer: {\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        paddingLeft: \"10px\",\r\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.2)',\r\n        width:\"100% !important\",\r\n        marginLeft : \"0 !important\"\r\n    },\r\n    JobsGradiantBorder: {\r\n        borderWidth: '0 0 0 15px',\r\n        borderStyle: 'solid',\r\n        borderImage: 'linear-gradient(#fd8590 , #fc364a)',\r\n        borderImageSlice: 1,\r\n\r\n    },\r\n    ProjectsGradiantBorder: {\r\n        borderImage: 'linear-gradient(#b281fd , #844cfa)',\r\n        borderWidth: '0 0 0 15px',\r\n        borderStyle: 'solid',\r\n        borderImageSlice: 1,\r\n\r\n    },\r\n    JobTitle: {\r\n        fontWeight: 'bold',\r\n\r\n    }\r\n});\r\nexport default useStyles;","import React from 'react';\r\nimport {Grid} from \"@mui/material\";\r\nimport useStyles from \"./jobs.style\";\r\n\r\nfunction Jobs(data) {\r\n    const is_project = data.type === 'project';\r\n    const styles = useStyles();\r\n    const GradiantBorder = is_project ? styles.ProjectsGradiantBorder : styles.JobsGradiantBorder;\r\n    const H2FontSize = window.innerWidth < 480 ? \"20px\" : \"\";\r\n    const PFontSize = window.innerWidth < 480 ? \"13px\" : \"\";\r\n    const H4FontSize = window.innerWidth < 480 ? \"16px\" : \"\";\r\n    return (\r\n        <div style={{color: 'white', marginTop: 35}}>\r\n            <Grid className={GradiantBorder + '  ' + styles.JobsContainer} container spacing={2}>\r\n                <div className=\"col-12\">\r\n                    <div className=\"flex-row d-flex\">\r\n                        <div className=\"flex-column d-flex\" style={{width: \"100%\"}}>\r\n                            <h2 style={{fontSize: H2FontSize}} className={styles.JobTitle}>\r\n                                {data.JobTitle}\r\n                            </h2>\r\n                            <p style={{fontWeight: \"700\", fontSize: PFontSize}}>\r\n                                {data.JobDepartment}\r\n                            </p>\r\n                        </div>\r\n                        <h4 style={{width: \"100%\", textAlign: \"right\", fontSize: H4FontSize}}>\r\n                            {data.JobDuration}\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <p style={{fontSize: PFontSize}}>\r\n                        {data.JobDescription}\r\n                    </p>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Jobs;","import {makeStyles} from \"@mui/styles\";\r\n\r\nexport function RandomGradiant() {\r\n\r\n    const color1 = [Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255)];\r\n    const opacity1 = Number(Number(Math.random()).toFixed(1));\r\n    const color2 = [Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255)];\r\n    const opacity2 = Number(Number(Math.random()).toFixed(1));\r\n    let gradiantText = \"linear-gradient( 270deg , \"\r\n    color1.forEach((value, index) => {\r\n        if (index == 0) {\r\n            gradiantText += \"rgb( \" + value + \" , \";\r\n        } else if (index == 2) {\r\n            gradiantText += \" \" + value + \" , \" + opacity1 + \" ) \";\r\n\r\n        } else {\r\n            gradiantText += \" \" + value + \" , \";\r\n\r\n        }\r\n    })\r\n    gradiantText += \" , \";\r\n    color2.forEach((value, index) => {\r\n        if (index == 0) {\r\n            gradiantText += \"rgb( \" + value + \" , \";\r\n        } else if (index == 2) {\r\n            gradiantText += \" \" + value + \" , \" + opacity2 + \" ) \";\r\n\r\n        } else {\r\n            gradiantText += \" \" + value + \" , \";\r\n\r\n        }\r\n    })\r\n    gradiantText += \" ) \";\r\n    return gradiantText;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    SkillsContainer: {\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        padding: '15px',\r\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.2)',\r\n\r\n    },\r\n    percentage: {\r\n        backgroundColor: 'white',\r\n        height: '25px'\r\n    },\r\n    randomGradiant: {\r\n        height: '25px',\r\n    }\r\n});\r\nexport default useStyles;","import React from 'react';\r\nimport {Grid} from \"@mui/material\";\r\nimport useStyles, {RandomGradiant} from \"./skills.style\";\r\n\r\nfunction Skills(data) {\r\n\r\n    const styles = useStyles();\r\n    return (\r\n        <Grid className={'flex-column ' + styles.SkillsContainer} container spacing={2}>\r\n            <h3 style={{padding :'15px 0'}}>\r\n                {data.SkillName}\r\n            </h3>\r\n            <br/>\r\n            <div className={styles.percentage}>\r\n                <div\r\n                    className={styles.randomGradiant}\r\n                    style={{width: (data.AbilityRate + ' % '),backgroundImage : data.gradiant}}\r\n                >\r\n\r\n                </div>\r\n            </div>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Skills;","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    LanguageContainer:{\r\n        paddingTop:20\r\n    }\r\n});\r\nexport default useStyles;","import React from 'react';\r\nimport {Grid} from \"@mui/material\";\r\nimport useStyles from \"./language.style\";\r\nimport {Star} from \"@mui/icons-material\";\r\n\r\nfunction return_stars(number) {\r\n    let star_array = []\r\n    for (let i = 0; i < number; i++) {\r\n        star_array.push(<Star style={{color: '#FFE00D'}} key={i + 1}/>)\r\n    }\r\n    return star_array;\r\n}\r\n\r\nfunction Language(data) {\r\n    const styles = useStyles();\r\n    return (\r\n        <Grid className={'flex-column '} container spacing={2}>\r\n            <h4>{data.name} :</h4>\r\n            <br/>\r\n            <br/>\r\n            <div className={\"shadow d-flex flex-row flex-wrap  \" + styles.LanguageContainer}>\r\n\r\n                <div className=\"flex-row d-flex col-12 col-md-6 justify-content-center\">\r\n                    <p>Listening :</p>\r\n                    {return_stars(data.Listening)}\r\n                </div>\r\n                <br/>\r\n                <div className=\"flex-row d-flex col-12 col-md-6 justify-content-center\">\r\n                    <p>Reading :</p>\r\n                    {return_stars(data.Reading)}\r\n                </div>\r\n                <br/>\r\n                <div className=\"flex-row d-flex col-12 col-md-6 justify-content-center\">\r\n                    <p>Speaking :</p>\r\n                    {return_stars(data.Speaking)}\r\n                </div>\r\n                <br/>\r\n                <div className=\"flex-row d-flex col-12 col-md-6 justify-content-center\">\r\n                    <p>Writing :</p>\r\n                    {return_stars(data.Writing)}\r\n                </div>\r\n            </div>\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Language;","import {makeStyles} from \"@mui/styles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    imageContainer:{\r\n        cursor:\"pointer\",\r\n        '&> img':{\r\n            transform:\"scale(1)\",\r\n            transition: 'all 0.5s ease-in-out'\r\n        }\r\n    },\r\n    ImagesMiddle:{\r\n        marginTop:'-60px !important',\r\n        display:\"flex\",\r\n        alignItems:\"center\",\r\n        flexDirection:\"column !important\"\r\n    },\r\n    ImageHovered:{\r\n        transform:\"scale(1.1) !important\",\r\n\r\n    }\r\n});\r\nexport default useStyles;","export default __webpack_public_path__ + \"static/media/1.4cfcbbe9.png\";","export default __webpack_public_path__ + \"static/media/2.5bf27d90.png\";","export default __webpack_public_path__ + \"static/media/3.eb062677.png\";","export default __webpack_public_path__ + \"static/media/4.8fac8754.png\";","export default __webpack_public_path__ + \"static/media/5.2ebe6631.png\";","export default __webpack_public_path__ + \"static/media/6.9742a558.png\";","import image1 from '../../assets/images/1.png';\r\nimport image2 from '../../assets/images/2.png';\r\nimport image3 from '../../assets/images/3.png';\r\nimport image4 from '../../assets/images/4.png';\r\nimport image5 from '../../assets/images/5.png';\r\nimport image6 from '../../assets/images/6.png';\r\n\r\n\r\nexport const img1 = image1;\r\nexport const img2 = image2;\r\nexport const img3 = image3;\r\nexport const img4 = image4;\r\nexport const img5 = image5;\r\nexport const img6 = image6;","import React from 'react';\r\nimport {Grid} from \"@mui/material\";\r\nimport useStyles from \"./Portfolio.style\";\r\nimport {\r\n    img1,\r\n    img2,\r\n    img3,\r\n    img4,\r\n    img5,\r\n    img6\r\n} from \"../../ResumeData/portfolio/images\"\r\n\r\n\r\nfunction ImageJsx(image) {\r\n    const styles = useStyles();\r\n\r\n    function ImageHoverHandler(e, MouseEv) {\r\n\r\n        if (MouseEv === 'enter') {\r\n\r\n            e.target.className = e.target.className + '  ' + styles.ImageHovered;\r\n        } else {\r\n            e.target.className = e.target.className.replace(styles.ImageHovered, '')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.imageContainer}>\r\n\r\n            <img\r\n                onMouseEnter={(event) => ImageHoverHandler(event, 'enter')}\r\n                onMouseLeave={(event) => ImageHoverHandler(event, 'leave')}\r\n                onClick={() => alert('Sorry this is a test resume , the data are fake')}\r\n                src={image}\r\n                alt={'image'}\r\n                width={\"100%\"}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Portfolio(data) {\r\n    const styles = useStyles();\r\n    return (\r\n        <Grid className={'flex-row '} container>\r\n            <Grid className={'flex-row d-flex flex-wrap justify-content-center' } item xs={12}>\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n\r\n                    <div>\r\n                        {ImageJsx(img1)}\r\n                    </div>\r\n                    <div>\r\n                        {ImageJsx(img2)}\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img3)}\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img4)}\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img5)}\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img6)}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","import React, {useState} from 'react'\r\nimport Profile from '../profile/profile';\r\nimport Jobs from \"../jobs/jobs\";\r\nimport {Box, Collapse, Grid, IconButton} from \"@mui/material\";\r\nimport Skills from \"../skills/skills\";\r\nimport Language from \"../language/language\";\r\nimport Portfolio from \"../Portfolio/Portfolio\";\r\nimport {ResumeJobsData, ResumeAbilitiesData, ResumeProjectsData} from \"../../ResumeData/ResumeData\";\r\nimport {RandomGradiant} from \"../skills/skills.style\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {Close} from \"@mui/icons-material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\n\r\nfunction ReturnJobs() {\r\n    const Data = ResumeJobsData;\r\n    let JobsJsxArray = [];\r\n    Object.keys(Data).forEach((val, i) => {\r\n        // console.log(Data[val]['JobTitle'])\r\n        JobsJsxArray.push(<Jobs\r\n            key={i}\r\n            JobTitle={Data[val]['JobTitle']}\r\n            JobDuration={Data[val]['JobDuration']}\r\n            JobDepartment={Data[val]['JobDepartment']}\r\n            JobDescription={Data[val]['JobDescription']}\r\n            type={'job'}\r\n        />)\r\n    });\r\n    return JobsJsxArray;\r\n}\r\n\r\nfunction ReturnProjects() {\r\n    const Data = ResumeProjectsData;\r\n    let JobsJsxArray = [];\r\n    Object.keys(Data).forEach((val, i) => {\r\n        // console.log(Data[val]['JobTitle'])\r\n        JobsJsxArray.push(<Jobs\r\n            key={i}\r\n            JobTitle={Data[val]['JobTitle']}\r\n            JobDuration={Data[val]['JobDuration']}\r\n            JobDepartment={Data[val]['JobDepartment']}\r\n            JobDescription={Data[val]['JobDescription']}\r\n            type={'project'}\r\n        />)\r\n    });\r\n    return JobsJsxArray;\r\n}\r\n\r\nfunction ReturnAbilities() {\r\n    const Data = ResumeAbilitiesData;\r\n    let SkillsJsxArray = [];\r\n    Object.keys(Data).forEach((val, i) => {\r\n        SkillsJsxArray.push(<Skills\r\n            key={i}\r\n            SkillName={Data[val]['skillName']}\r\n            AbilityRate={Data[val]['AbilityRate']}\r\n            gradiant={RandomGradiant()}\r\n        />)\r\n    });\r\n    return SkillsJsxArray;\r\n}\r\n\r\nconst ContainerPadding = window.innerWidth < 420 ?\r\n    \"30px 0px\" :\r\n    window.innerWidth < 900 ?\r\n        \"40px 15px\" :\r\n        \"40px 80px\";\r\nconst AbilitiesMargin = window.innerWidth < 900 ? \"70px\" : \"0px\";\r\n\r\nfunction Layout() {\r\n    const styles = useStyles();\r\n    return (\r\n        <div>\r\n            <Profile/>\r\n            <br/>\r\n            <h2 style={{textAlign: \"center\", width: \"100%\", color: \"white\"}}>\r\n                RESUME\r\n            </h2>\r\n            <Grid container style={{padding: ContainerPadding, color: 'white', justifyContent: 'center'}}>\r\n\r\n                <Grid item xs={11} sm={10} md={5}>\r\n                    {ReturnJobs()}\r\n\r\n                </Grid>\r\n                <Grid style={{marginTop: AbilitiesMargin}} item xs={10} sm={10} md={5}>\r\n                    {ReturnAbilities()}\r\n                </Grid>\r\n                <Grid style={{marginTop: AbilitiesMargin}} item xs={10} sm={10} md={5}>\r\n                    <h3 style={{textAlign: 'center'}}>\r\n                        Language Skills\r\n                    </h3>\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Language\r\n                        name={'English'}\r\n                        Speaking={4}\r\n                        Listening={5}\r\n                        Writing={3}\r\n                        Reading={4}\r\n                    />\r\n                    <br/>\r\n                    <br/>\r\n                    <br/>\r\n                    <Language\r\n                        name={'Spanish'}\r\n                        Speaking={3}\r\n                        Listening={3}\r\n                        Writing={2}\r\n                        Reading={4}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{padding: ContainerPadding, color: 'white', justifyContent: 'center'}}>\r\n\r\n\r\n                <Grid item xs={11} sm={10} md={5}>\r\n                    {ReturnProjects()}\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <Grid\r\n                container\r\n                className={styles.PortfolioContainer}\r\n            >\r\n                <h3 style={{paddingBottom: '40px'}}>Portfolio </h3>\r\n\r\n                <Portfolio/>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    PortfolioContainer: {\r\n        padding: ContainerPadding,\r\n        color: 'white',\r\n        justifyContent: 'center'\r\n    }\r\n});\r\n\r\n\r\nexport default Layout;\r\n","import React from 'react';\nimport Text from \"./features/textInput/Text\";\nimport Layout from './components/layout/layout';\nimport './assets/bootstrap.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        \n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport  textReducer  from \"../features/textInput/TextSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    text: textReducer\n    \n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
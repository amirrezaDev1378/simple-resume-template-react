[{"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\index.js":"1","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\App.js":"2","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\serviceWorker.js":"3","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\app\\store.js":"4","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\features\\textInput\\Text.js":"5","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\features\\textInput\\TextSlice.js":"6","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\layout\\layout.jsx":"7","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\profile\\profile.jsx":"8","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\profile\\profile.style.jsx":"9","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\ResumeData\\ResumeData.js":"10","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\jobs\\jobs.jsx":"11","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\jobs\\jobs.style.jsx":"12","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\skills\\skills.jsx":"13","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\skills\\skills.style.jsx":"14","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\language\\language.jsx":"15","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\language\\language.style.jsx":"16","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\Portfolio\\Portfolio.jsx":"17","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\Portfolio\\Portfolio.style.jsx":"18","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\ResumeData\\portfolio\\images.js":"19"},{"size":627,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":293,"mtime":1639595596431,"results":"22","hashOfConfig":"21"},{"size":5014,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":200,"mtime":1639373316998,"results":"24","hashOfConfig":"21"},{"size":620,"mtime":1639373141514,"results":"25","hashOfConfig":"21"},{"size":2536,"mtime":1639373342861,"results":"26","hashOfConfig":"21"},{"size":4756,"mtime":1639989552790,"results":"27","hashOfConfig":"21"},{"size":2566,"mtime":1639979132644,"results":"28","hashOfConfig":"21"},{"size":2310,"mtime":1639901031366,"results":"29","hashOfConfig":"21"},{"size":593,"mtime":1639897214451,"results":"30","hashOfConfig":"21"},{"size":1656,"mtime":1639978332375,"results":"31","hashOfConfig":"21"},{"size":799,"mtime":1639978406801,"results":"32","hashOfConfig":"21"},{"size":796,"mtime":1639989668773,"results":"33","hashOfConfig":"21"},{"size":1600,"mtime":1639897112874,"results":"34","hashOfConfig":"21"},{"size":1629,"mtime":1639980804293,"results":"35","hashOfConfig":"21"},{"size":162,"mtime":1639891623118,"results":"36","hashOfConfig":"21"},{"size":2297,"mtime":1639976096186,"results":"37","hashOfConfig":"21"},{"size":516,"mtime":1639974822079,"results":"38","hashOfConfig":"21"},{"size":470,"mtime":1639892877053,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"ntvc5o",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\index.js",[],["86","87"],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\App.js",["88"],"import React from 'react';\nimport Text from \"./features/textInput/Text\";\nimport Layout from './components/layout/layout';\nimport './assets/bootstrap.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        \n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\serviceWorker.js",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\app\\store.js",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\features\\textInput\\Text.js",["89","90","91"],"import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n    addText,\r\n    changeText,\r\n    selectValue,\r\n    TestFunc\r\n  } from './TextSlice';\r\n  import Button from '@mui/material/Button';\r\nfunction Text() {\r\n    const value = useSelector(selectValue);\r\n    const dispatch = useDispatch();\r\n    // const [addText, setAddText] = useState('mamooz');\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p >{value}</p>\r\n            <Button onClick={() => dispatch(addText())}>\r\n                Add Text\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Text\r\n","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\features\\textInput\\TextSlice.js",["92"],"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\n// import { fetchCount } from './counterAPI';\r\n\r\nconst initialState = {\r\n    value:'mame',\r\n    status: 'idle',\r\n};\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched. Thunks are\r\n// typically used to make async requests.\r\n// export const incrementAsync = createAsyncThunk(\r\n//   'counter/fetchCount',\r\n//   async (amount) => {\r\n//     const response = await fetchCount(amount);\r\n//     // The value we return becomes the `fulfilled` action payload\r\n//     return response.data;\r\n//   }\r\n// );\r\n\r\nexport const TextSlice = createSlice({\r\n    name: 'text',\r\n    initialState,\r\n    // The `reducers` field lets us define reducers and generate associated actions\r\n    reducers: {\r\n\r\n        addText: (state) => {\r\n            state.value = 'Math'\r\n        },\r\n\r\n        // Use the PayloadAction type to declare the contents of `action.payload`\r\n        changeText: (state, action) => {\r\n            state.value = action.payload;\r\n        },\r\n    },\r\n    // The `extraReducers` field lets the slice handle actions defined elsewhere,\r\n    // including actions generated by createAsyncThunk or in other slices.\r\n    //   extraReducers: (builder) => {\r\n    //     builder\r\n    //       .addCase(incrementAsync.pending, (state) => {\r\n    //         state.status = 'loading';\r\n    //       })\r\n    //       .addCase(incrementAsync.fulfilled, (state, action) => {\r\n    //         state.status = 'idle';\r\n    //         state.value += action.payload;\r\n    //       });\r\n    //   },\r\n});\r\n\r\nexport const { addText, changeText } = TextSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\r\nexport const selectValue = (state) => state.text.value;\r\n\r\n// We can also write thunks by hand, which may contain both sync and async logic.\r\n// Here's an example of conditionally dispatching actions based on current state.\r\nexport const TestFunc = (amount) => (dispatch, getState) => {\r\n    const currentValue = selectValue(getState());\r\n    console.log(currentValue)\r\n};\r\n\r\nexport default TextSlice.reducer;\r\n","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\layout\\layout.jsx",["93","94","95","96","97","98","99"],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\profile\\profile.jsx",["100","101","102","103","104","105"],"import {Button, Container, Grid} from \"@mui/material\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport useStyles from \"./profile.style\";\r\nimport {ResumePicture} from \"../../ResumeData/ResumeData\";\r\nimport {BackspaceOutlined} from \"@mui/icons-material\";\r\n\r\n\r\nfunction Profile() {\r\n    const styles = useStyles();\r\n    const profileBox = React.createRef();\r\n    const profileText = React.createRef();\r\n    const profileSVG = React.createRef();\r\n    const [test, updateTest] = useState(0);\r\n\r\n    useEffect(() => {\r\n\r\n        profileText.current.setAttribute('style', 'width: ' + profileBox.current.clientWidth + 'px;');\r\n        window.onresize = function () {\r\n            if (profileText.current !== null) {\r\n\r\n                profileText.current.setAttribute('style', 'width: ' + profileBox.current.clientWidth + 'px;');\r\n            }\r\n\r\n\r\n        }\r\n\r\n\r\n    }, [window.innerWidth])\r\n\r\n    const SVGwidth = window.innerWidth <500 ? \"130%\" : \"100%\";\r\n    return (\r\n\r\n        <Grid className={styles.profileGrid} container spacing={2}>\r\n\r\n            <Grid className={styles.profile} item xs={10} sm={10} md={4} ref={profileBox}>\r\n                <div className={styles.profilePicture}>\r\n\r\n                    <img className={styles.profilePic + ' img-grid'} src={ResumePicture} alt='dsd'/>\r\n                </div>\r\n\r\n                <div className={styles.profileText} ref={profileText}>\r\n\r\n\r\n                    <h3>Hi, I'm Jhon Smith</h3>\r\n                    <h1 className=\"text-red\">\r\n                        Creative Designer\r\n                    </h1>\r\n                    <p className=\"text\">Web, Mobile App UI/UX </p>\r\n                    <br/>\r\n                    <br/>\r\n                    <div className={'f-row ' + styles.profileButtons}>\r\n                        <Button>Download CV</Button>\r\n                        <Button>Hire Me !</Button>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div className={styles.profileSVG}>\r\n\r\n                    <svg ref={profileSVG} xmlns=\"http://www.w3.org/2000/svg\" width={SVGwidth} viewBox=\"0 0 570 511.125\">\r\n                        <path id=\"Path_85\" data-name=\"Path 85\"\r\n                              d=\"M0-70.147s78.986,53.585,171.761,0,81.577-62.383,155.957-115.968C466.88-261.295,570-210.109,570-210.109V284H0Z\"\r\n                              transform=\"translate(0 227.125)\" fill=\"#222b45\"\r\n                        />\r\n                    </svg>\r\n\r\n                </div>\r\n\r\n\r\n            </Grid>\r\n\r\n\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\profile\\profile.style.jsx",["106"],"import { makeStyles } from \"@mui/styles\";\r\nimport bgi from '../../assets/images/bg.png'\r\nconst useStyles = makeStyles({\r\n    profileGrid:{\r\n        display:\"flex\",\r\n        justifyContent:'center',\r\n        alignItems:'center',\r\n        width:'100%'\r\n    },\r\n    profile: {\r\n        backgroundImage: 'linear-gradient(#FFE00D , #FEA127)',\r\n        height: '700px',\r\n        display: 'flex',\r\n        flexDirection: 'column !important',\r\n        boxShadow: '0px 0px 70px rgba(0, 0, 0, 0.3)',\r\n        borderRadius: '12px',\r\n        justifyContent:\"center\",\r\n        overflow:'hidden',\r\n        padding:'0px !important',\r\n        marginTop:'70px !important'\r\n    },\r\n    profileSVG: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-end',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'flex-end',\r\n        height: '100%',\r\n        // backgroundImage : `url(${bgi})`,\r\n        // backgroundRepeat : 'no-repeat',\r\n        // backgroundSize : 'cover'\r\n    },\r\n    profilePic: {\r\n        position: 'absolute'\r\n    },\r\n    profilePicture: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: '66px',\r\n        zIndex: 3\r\n    },\r\n    profileText: {\r\n        zIndex: 99,\r\n        textAlign: 'center',\r\n        marginTop: 390,\r\n        position: 'absolute',\r\n        '&>:nth-child(1)':{\r\n            color:'white !important'\r\n        },\r\n        '&>:nth-child(3)':{\r\n            color:'white !important'\r\n        }\r\n    },\r\n    profileTextParent: {\r\n        width: '100%'\r\n    },\r\n    profileButtons: {\r\n        \"& > *\": {\r\n            marginRight: '20px !important',\r\n            textAlign: 'center',\r\n        },\r\n        \"&>:nth-child(1)\": {\r\n            color: 'white',\r\n            background: 'linear-gradient(#fd8590 0%, #fc364a 100%) !important',\r\n            filter: 'drop-shadow(0px 16px 24px rgba(252, 59, 78, 0.24)) !important',\r\n            borderRadius:198,\r\n            padding:10\r\n\r\n        },\r\n        \"&>:nth-child(2)\": {\r\n            color: 'white',\r\n            borderRadius: '25px',\r\n            background: 'linear-gradient(#b281fd 0%, #844cfa 100%) !important',\r\n            boxShadow:'0px 16px 24px rgba(134, 78, 250, 0.24) !important',\r\n\r\n            padding:10\r\n\r\n        }\r\n\r\n    }\r\n});\r\nexport default useStyles;","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\ResumeData\\ResumeData.js",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\jobs\\jobs.jsx",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\jobs\\jobs.style.jsx",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\skills\\skills.jsx",["107"],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\skills\\skills.style.jsx",["108","109","110","111"],"import {makeStyles} from \"@mui/styles\";\r\n\r\nexport function RandomGradiant() {\r\n\r\n    const color1 = [Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255)];\r\n    const opacity1 = Number(Number(Math.random()).toFixed(1));\r\n    const color2 = [Math.round(Math.random() * 255), Math.round(Math.random() * 255), Math.round(Math.random() * 255)];\r\n    const opacity2 = Number(Number(Math.random()).toFixed(1));\r\n    let gradiantText = \"linear-gradient( 270deg , \"\r\n    color1.forEach((value, index) => {\r\n        if (index == 0) {\r\n            gradiantText += \"rgb( \" + value + \" , \";\r\n        } else if (index == 2) {\r\n            gradiantText += \" \" + value + \" , \" + opacity1 + \" ) \";\r\n\r\n        } else {\r\n            gradiantText += \" \" + value + \" , \";\r\n\r\n        }\r\n    })\r\n    gradiantText += \" , \";\r\n    color2.forEach((value, index) => {\r\n        if (index == 0) {\r\n            gradiantText += \"rgb( \" + value + \" , \";\r\n        } else if (index == 2) {\r\n            gradiantText += \" \" + value + \" , \" + opacity2 + \" ) \";\r\n\r\n        } else {\r\n            gradiantText += \" \" + value + \" , \";\r\n\r\n        }\r\n    })\r\n    gradiantText += \" ) \";\r\n    return gradiantText;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    SkillsContainer: {\r\n        display: 'flex',\r\n        justifyContent: \"center\",\r\n        padding: '15px',\r\n        boxShadow: '0px 0px 20px rgba(0, 0, 0, 0.2)',\r\n\r\n    },\r\n    percentage: {\r\n        backgroundColor: 'white',\r\n        height: '25px'\r\n    },\r\n    randomGradiant: {\r\n        height: '25px',\r\n    }\r\n});\r\nexport default useStyles;","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\language\\language.jsx",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\language\\language.style.jsx",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\Portfolio\\Portfolio.jsx",["112"],"import React from 'react';\r\nimport {Grid} from \"@mui/material\";\r\nimport useStyles from \"./Portfolio.style\";\r\nimport {\r\n    img1,\r\n    img2,\r\n    img3,\r\n    img4,\r\n    img5,\r\n    img6\r\n} from \"../../ResumeData/portfolio/images\"\r\n\r\n\r\nfunction ImageJsx(image) {\r\n    const styles = useStyles();\r\n\r\n    function ImageHoverHandler(e, MouseEv) {\r\n\r\n        if (MouseEv === 'enter') {\r\n\r\n            e.target.className = e.target.className + '  ' + styles.ImageHovered;\r\n        } else {\r\n            e.target.className = e.target.className.replace(styles.ImageHovered, '')\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.imageContainer}>\r\n\r\n            <img\r\n                onMouseEnter={(event) => ImageHoverHandler(event, 'enter')}\r\n                onMouseLeave={(event) => ImageHoverHandler(event, 'leave')}\r\n                onClick={() => alert('Sorry this is a test resume , the data are fake')}\r\n                src={image}\r\n                alt={'image'}\r\n                width={\"100%\"}\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Portfolio(data) {\r\n    const styles = useStyles();\r\n    return (\r\n        <Grid className={'flex-row '} container>\r\n            <Grid className={'flex-row d-flex flex-wrap justify-content-center' } item xs={12}>\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n\r\n                    <div>\r\n                        {ImageJsx(img1)}\r\n                    </div>\r\n                    <div>\r\n                        {ImageJsx(img2)}\r\n                    </div>\r\n\r\n                </Grid>\r\n\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img3)}\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img4)}\r\n                    </div>\r\n                </Grid>\r\n                <Grid className={styles.ImagesMiddle} item xs={12} md={3}>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img5)}\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {ImageJsx(img6)}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Portfolio;","C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\components\\Portfolio\\Portfolio.style.jsx",[],"C:\\Users\\AMIR\\Desktop\\projects\\resume\\src\\ResumeData\\portfolio\\images.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":12},{"ruleId":"117","severity":1,"message":"121","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"122","line":5,"column":5,"nodeType":"119","messageId":"120","endLine":5,"endColumn":15},{"ruleId":"117","severity":1,"message":"123","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":7,"endColumn":13},{"ruleId":"117","severity":1,"message":"124","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"121","line":1,"column":16,"nodeType":"119","messageId":"120","endLine":1,"endColumn":24},{"ruleId":"117","severity":1,"message":"125","line":4,"column":9,"nodeType":"119","messageId":"120","endLine":4,"endColumn":12},{"ruleId":"117","severity":1,"message":"126","line":4,"column":14,"nodeType":"119","messageId":"120","endLine":4,"endColumn":22},{"ruleId":"117","severity":1,"message":"127","line":4,"column":30,"nodeType":"119","messageId":"120","endLine":4,"endColumn":40},{"ruleId":"117","severity":1,"message":"128","line":10,"column":8,"nodeType":"119","messageId":"120","endLine":10,"endColumn":13},{"ruleId":"117","severity":1,"message":"129","line":11,"column":8,"nodeType":"119","messageId":"120","endLine":11,"endColumn":14},{"ruleId":"117","severity":1,"message":"130","line":12,"column":9,"nodeType":"119","messageId":"120","endLine":12,"endColumn":14},{"ruleId":"117","severity":1,"message":"131","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"117","severity":1,"message":"132","line":2,"column":27,"nodeType":"119","messageId":"120","endLine":2,"endColumn":33},{"ruleId":"117","severity":1,"message":"133","line":5,"column":9,"nodeType":"119","messageId":"120","endLine":5,"endColumn":26},{"ruleId":"117","severity":1,"message":"134","line":13,"column":12,"nodeType":"119","messageId":"120","endLine":13,"endColumn":16},{"ruleId":"117","severity":1,"message":"135","line":13,"column":18,"nodeType":"119","messageId":"120","endLine":13,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":28,"column":8,"nodeType":"138","endLine":28,"endColumn":27,"suggestions":"139"},{"ruleId":"117","severity":1,"message":"140","line":2,"column":8,"nodeType":"119","messageId":"120","endLine":2,"endColumn":11},{"ruleId":"117","severity":1,"message":"141","line":3,"column":20,"nodeType":"119","messageId":"120","endLine":3,"endColumn":34},{"ruleId":"142","severity":1,"message":"143","line":11,"column":19,"nodeType":"144","messageId":"145","endLine":11,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":13,"column":26,"nodeType":"144","messageId":"145","endLine":13,"endColumn":28},{"ruleId":"142","severity":1,"message":"143","line":23,"column":19,"nodeType":"144","messageId":"145","endLine":23,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":25,"column":26,"nodeType":"144","messageId":"145","endLine":25,"endColumn":28},{"ruleId":"146","severity":1,"message":"147","line":31,"column":13,"nodeType":"148","endLine":38,"endColumn":15},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Text' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'changeText' is defined but never used.","'TestFunc' is defined but never used.","'createAsyncThunk' is defined but never used.","'Box' is defined but never used.","'Collapse' is defined but never used.","'IconButton' is defined but never used.","'Alert' is defined but never used.","'Button' is defined but never used.","'Close' is defined but never used.","'Container' is defined but never used.","'useRef' is defined but never used.","'BackspaceOutlined' is defined but never used.","'test' is assigned a value but never used.","'updateTest' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'profileBox' and 'profileText'. Either include them or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["151"],"'bgi' is defined but never used.","'RandomGradiant' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},"Update the dependencies array to be: [profileBox, profileText]",{"range":"154","text":"155"},[883,902],"[profileBox, profileText]"]